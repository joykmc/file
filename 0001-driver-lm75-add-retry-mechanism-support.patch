From f6429eaee2b23596cff6e6110847f3df5fb73da7 Mon Sep 17 00:00:00 2001
From: lizhaoxing <lizhaoxing@inspur.com>
Date: Fri, 6 Sep 2024 14:36:58 +0800
Subject: [PATCH] driver lm75 add retry mechanism support

Description:
	1. add retry mechanism support and module param support, default is 3 times

Changes to be committed:
       modified:   device/hwmon/lm75.c
---
 device/hwmon/lm75.c | 15 +++++++++++++--
 1 file changed, 13 insertions(+), 2 deletions(-)

diff --git a/device/hwmon/lm75.c b/device/hwmon/lm75.c
index e447feb..00712d4 100644
--- a/device/hwmon/lm75.c
+++ b/device/hwmon/lm75.c
@@ -24,6 +24,10 @@
  * This driver handles the LM75 and compatible digital temperature sensors.
  */
 
+static int retries = 0x03;
+module_param(retries, int, 0644);
+MODULE_PARM_DESC(retries, "retries: number of retries when reading failed.\n");
+
 enum lm75_type {		/* keep sorted in alphabetical order */
 	adt75,
 	ds1775,
@@ -327,7 +331,7 @@ static int lm75_read(struct device *dev, enum hwmon_sensor_types type,
 {
 	struct lm75_data *data = dev_get_drvdata(dev);
 	unsigned int regval;
-	int err, reg;
+	int err, reg, i;
 
 	switch (type) {
 	case hwmon_chip:
@@ -353,7 +357,14 @@ static int lm75_read(struct device *dev, enum hwmon_sensor_types type,
 		default:
 			return -EINVAL;
 		}
-		err = regmap_read(data->regmap, reg, &regval);
+
+		for (i =0; i < retries; i++) {
+			err = regmap_read(data->regmap, reg, &regval);
+			if (err >= 0)
+				break;
+			dev_info(dev, "lm75 device retry %d times, err=%d\n", i+1, err);
+			usleep_range(100, 500);
+		}
 		if (err < 0)
 			return err;
 
-- 
2.25.1

